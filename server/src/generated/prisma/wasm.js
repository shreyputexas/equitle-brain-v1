
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  firm: 'firm',
  role: 'role',
  phone: 'phone',
  location: 'location',
  avatar: 'avatar',
  emailVerified: 'emailVerified',
  isActive: 'isActive',
  lastLogin: 'lastLogin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  bio: 'bio',
  joinDate: 'joinDate',
  timezone: 'timezone',
  language: 'language',
  theme: 'theme',
  notifications: 'notifications',
  settings: 'settings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserPreferenceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  emailNotify: 'emailNotify',
  pushNotify: 'pushNotify',
  smsNotify: 'smsNotify',
  calendarNotify: 'calendarNotify',
  dealNotify: 'dealNotify',
  autoSave: 'autoSave',
  darkMode: 'darkMode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IntegrationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  provider: 'provider',
  type: 'type',
  isActive: 'isActive',
  accessToken: 'accessToken',
  refreshToken: 'refreshToken',
  expiresAt: 'expiresAt',
  scope: 'scope',
  profile: 'profile',
  settings: 'settings',
  lastSync: 'lastSync',
  syncStatus: 'syncStatus',
  errorMessage: 'errorMessage',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DealScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  company: 'company',
  description: 'description',
  sector: 'sector',
  stage: 'stage',
  status: 'status',
  value: 'value',
  probability: 'probability',
  leadPartner: 'leadPartner',
  team: 'team',
  tags: 'tags',
  priority: 'priority',
  targetClose: 'targetClose',
  actualClose: 'actualClose',
  nextStep: 'nextStep',
  lastActivity: 'lastActivity',
  source: 'source',
  geography: 'geography',
  dealSize: 'dealSize',
  metrics: 'metrics',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dealId: 'dealId',
  googleContactId: 'googleContactId',
  name: 'name',
  email: 'email',
  phone: 'phone',
  company: 'company',
  title: 'title',
  role: 'role',
  linkedinUrl: 'linkedinUrl',
  avatar: 'avatar',
  notes: 'notes',
  tags: 'tags',
  relationshipScore: 'relationshipScore',
  lastContact: 'lastContact',
  status: 'status',
  isKeyContact: 'isKeyContact',
  source: 'source',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActivityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dealId: 'dealId',
  contactId: 'contactId',
  type: 'type',
  title: 'title',
  description: 'description',
  content: 'content',
  date: 'date',
  duration: 'duration',
  location: 'location',
  attendees: 'attendees',
  status: 'status',
  priority: 'priority',
  outcome: 'outcome',
  nextSteps: 'nextSteps',
  metadata: 'metadata',
  externalId: 'externalId',
  syncedFrom: 'syncedFrom',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dealId: 'dealId',
  name: 'name',
  description: 'description',
  type: 'type',
  category: 'category',
  size: 'size',
  url: 'url',
  googleDriveId: 'googleDriveId',
  path: 'path',
  version: 'version',
  isConfidential: 'isConfidential',
  uploadedBy: 'uploadedBy',
  tags: 'tags',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CommunicationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dealId: 'dealId',
  contactId: 'contactId',
  type: 'type',
  subject: 'subject',
  content: 'content',
  htmlContent: 'htmlContent',
  fromEmail: 'fromEmail',
  toEmails: 'toEmails',
  ccEmails: 'ccEmails',
  bccEmails: 'bccEmails',
  threadId: 'threadId',
  messageId: 'messageId',
  status: 'status',
  direction: 'direction',
  isRead: 'isRead',
  isImportant: 'isImportant',
  labels: 'labels',
  attachments: 'attachments',
  metadata: 'metadata',
  sentAt: 'sentAt',
  receivedAt: 'receivedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvestorScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  type: 'type',
  status: 'status',
  totalCommitment: 'totalCommitment',
  totalCalled: 'totalCalled',
  description: 'description',
  website: 'website',
  location: 'location',
  founded: 'founded',
  aum: 'aum',
  tags: 'tags',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FundScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  type: 'type',
  strategy: 'strategy',
  targetSize: 'targetSize',
  minimumCommitment: 'minimumCommitment',
  managementFee: 'managementFee',
  carriedInterest: 'carriedInterest',
  currency: 'currency',
  vintage: 'vintage',
  investmentPeriod: 'investmentPeriod',
  fundTerm: 'fundTerm',
  geoFocus: 'geoFocus',
  sectorFocus: 'sectorFocus',
  description: 'description',
  status: 'status',
  raisedAmount: 'raisedAmount',
  investorCount: 'investorCount',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvestorEntityScalarFieldEnum = {
  id: 'id',
  investorId: 'investorId',
  name: 'name',
  type: 'type',
  investmentType: 'investmentType',
  commitment: 'commitment',
  called: 'called',
  status: 'status',
  documents: 'documents',
  fundInvestments: 'fundInvestments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReportScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  type: 'type',
  format: 'format',
  content: 'content',
  data: 'data',
  url: 'url',
  status: 'status',
  recipients: 'recipients',
  sentAt: 'sentAt',
  generatedAt: 'generatedAt',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SyncJobScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  status: 'status',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  errorMessage: 'errorMessage',
  itemsProcessed: 'itemsProcessed',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamsMessageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dealId: 'dealId',
  contactId: 'contactId',
  messageId: 'messageId',
  chatId: 'chatId',
  channelId: 'channelId',
  teamId: 'teamId',
  fromEmail: 'fromEmail',
  fromName: 'fromName',
  content: 'content',
  contentType: 'contentType',
  importance: 'importance',
  messageType: 'messageType',
  attachments: 'attachments',
  mentions: 'mentions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  sentAt: 'sentAt'
};

exports.Prisma.TeamsChannelScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  channelId: 'channelId',
  teamId: 'teamId',
  name: 'name',
  description: 'description',
  type: 'type',
  webUrl: 'webUrl',
  memberCount: 'memberCount',
  isArchived: 'isArchived',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SlackMessageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dealId: 'dealId',
  contactId: 'contactId',
  messageId: 'messageId',
  channelId: 'channelId',
  channelName: 'channelName',
  fromUserId: 'fromUserId',
  fromName: 'fromName',
  text: 'text',
  messageType: 'messageType',
  threadTs: 'threadTs',
  attachments: 'attachments',
  reactions: 'reactions',
  mentions: 'mentions',
  sentAt: 'sentAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SlackChannelScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  channelId: 'channelId',
  name: 'name',
  purpose: 'purpose',
  topic: 'topic',
  isPrivate: 'isPrivate',
  isArchived: 'isArchived',
  memberCount: 'memberCount',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ZoomMeetingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dealId: 'dealId',
  meetingId: 'meetingId',
  uuid: 'uuid',
  topic: 'topic',
  agenda: 'agenda',
  startTime: 'startTime',
  duration: 'duration',
  timezone: 'timezone',
  status: 'status',
  meetingType: 'meetingType',
  joinUrl: 'joinUrl',
  startUrl: 'startUrl',
  password: 'password',
  hostEmail: 'hostEmail',
  participantCount: 'participantCount',
  hasRecording: 'hasRecording',
  recordingUrl: 'recordingUrl',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ZoomParticipantScalarFieldEnum = {
  id: 'id',
  meetingId: 'meetingId',
  userId: 'userId',
  zoomUserId: 'zoomUserId',
  name: 'name',
  email: 'email',
  joinTime: 'joinTime',
  leaveTime: 'leaveTime',
  duration: 'duration',
  status: 'status',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SalesforceAccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dealId: 'dealId',
  accountId: 'accountId',
  name: 'name',
  type: 'type',
  industry: 'industry',
  website: 'website',
  phone: 'phone',
  billingCity: 'billingCity',
  billingState: 'billingState',
  billingCountry: 'billingCountry',
  description: 'description',
  revenue: 'revenue',
  employees: 'employees',
  ownerId: 'ownerId',
  metadata: 'metadata',
  lastSync: 'lastSync',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SalesforceContactScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  contactId: 'contactId',
  accountId: 'accountId',
  name: 'name',
  email: 'email',
  phone: 'phone',
  title: 'title',
  department: 'department',
  leadSource: 'leadSource',
  description: 'description',
  ownerId: 'ownerId',
  metadata: 'metadata',
  lastSync: 'lastSync',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SalesforceOpportunityScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  dealId: 'dealId',
  opportunityId: 'opportunityId',
  accountId: 'accountId',
  name: 'name',
  amount: 'amount',
  stage: 'stage',
  probability: 'probability',
  closeDate: 'closeDate',
  type: 'type',
  leadSource: 'leadSource',
  description: 'description',
  ownerId: 'ownerId',
  metadata: 'metadata',
  lastSync: 'lastSync',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LPGroupScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  description: 'description',
  type: 'type',
  criteria: 'criteria',
  autoAssign: 'autoAssign',
  emailPreferences: 'emailPreferences',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InvestorGroupMemberScalarFieldEnum = {
  id: 'id',
  investorId: 'investorId',
  groupId: 'groupId',
  assignedAt: 'assignedAt',
  autoAssigned: 'autoAssigned'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Profile: 'Profile',
  UserPreference: 'UserPreference',
  Integration: 'Integration',
  Deal: 'Deal',
  Contact: 'Contact',
  Activity: 'Activity',
  Document: 'Document',
  Communication: 'Communication',
  Investor: 'Investor',
  Fund: 'Fund',
  InvestorEntity: 'InvestorEntity',
  Report: 'Report',
  SyncJob: 'SyncJob',
  TeamsMessage: 'TeamsMessage',
  TeamsChannel: 'TeamsChannel',
  SlackMessage: 'SlackMessage',
  SlackChannel: 'SlackChannel',
  ZoomMeeting: 'ZoomMeeting',
  ZoomParticipant: 'ZoomParticipant',
  SalesforceAccount: 'SalesforceAccount',
  SalesforceContact: 'SalesforceContact',
  SalesforceOpportunity: 'SalesforceOpportunity',
  LPGroup: 'LPGroup',
  InvestorGroupMember: 'InvestorGroupMember'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/shreyp/Documents/Equitle/newShit/server/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/shreyp/Documents/Equitle/newShit/server/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// User model for authentication and profile\nmodel User {\n  id            String    @id @default(uuid())\n  email         String    @unique\n  password      String\n  name          String\n  firm          String?\n  role          String?\n  phone         String?\n  location      String?\n  avatar        String?\n  emailVerified Boolean   @default(false)\n  isActive      Boolean   @default(true)\n  lastLogin     DateTime?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  // Relationships\n  profile        Profile?\n  integrations   Integration[]\n  deals          Deal[]\n  activities     Activity[]\n  ownedContacts  Contact[]\n  communications Communication[]\n  documents      Document[]\n  preferences    UserPreference?\n\n  // New integration relationships\n  teamsMessages           TeamsMessage[]\n  teamsChannels           TeamsChannel[]\n  slackMessages           SlackMessage[]\n  slackChannels           SlackChannel[]\n  zoomMeetings            ZoomMeeting[]\n  zoomParticipants        ZoomParticipant[]\n  salesforceAccounts      SalesforceAccount[]\n  salesforceContacts      SalesforceContact[]\n  salesforceOpportunities SalesforceOpportunity[]\n\n  // Fund and LP relationships\n  funds     Fund[]\n  investors Investor[]\n  lpGroups  LPGroup[]\n\n  @@map(\"users\")\n}\n\n// User profile and preferences\nmodel Profile {\n  id            String   @id @default(uuid())\n  userId        String   @unique\n  title         String?\n  bio           String?\n  joinDate      DateTime @default(now())\n  timezone      String   @default(\"UTC\")\n  language      String   @default(\"en\")\n  theme         String   @default(\"light\")\n  notifications Json? // Store notification preferences\n  settings      Json? // Store user settings\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"profiles\")\n}\n\n// User preferences\nmodel UserPreference {\n  id             String   @id @default(uuid())\n  userId         String   @unique\n  emailNotify    Boolean  @default(true)\n  pushNotify     Boolean  @default(true)\n  smsNotify      Boolean  @default(false)\n  calendarNotify Boolean  @default(true)\n  dealNotify     Boolean  @default(true)\n  autoSave       Boolean  @default(true)\n  darkMode       Boolean  @default(false)\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_preferences\")\n}\n\n// Google and other integrations\nmodel Integration {\n  id           String    @id @default(uuid())\n  userId       String\n  provider     String // 'google', 'microsoft', etc.\n  type         String // 'gmail', 'calendar', 'drive', 'meet', etc.\n  isActive     Boolean   @default(true)\n  accessToken  String?\n  refreshToken String?\n  expiresAt    DateTime?\n  scope        String[]\n  profile      Json? // Store provider profile info\n  settings     Json? // Store integration settings\n  lastSync     DateTime?\n  syncStatus   String    @default(\"active\") // active, error, disconnected\n  errorMessage String?\n  metadata     Json? // Store additional metadata\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, provider, type])\n  @@map(\"integrations\")\n}\n\n// Deals and opportunities\nmodel Deal {\n  id           String    @id @default(uuid())\n  userId       String\n  company      String\n  description  String?\n  sector       String?\n  stage        String // 'prospect', 'due-diligence', 'term-sheet', 'closing', 'closed'\n  status       String    @default(\"active\") // active, paused, closed, lost\n  value        Float?\n  probability  Float? // 0-100\n  leadPartner  String?\n  team         String[] // Array of team member names\n  tags         String[] // Array of tags\n  priority     String    @default(\"medium\") // low, medium, high, critical\n  targetClose  DateTime?\n  actualClose  DateTime?\n  nextStep     String?\n  lastActivity DateTime?\n  source       String? // referral, inbound, outbound, etc.\n  geography    String?\n  dealSize     String? // seed, series-a, etc.\n  metrics      Json? // Store deal metrics\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n\n  // Relationships\n  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)\n  contacts       Contact[]\n  documents      Document[]\n  activities     Activity[]\n  communications Communication[]\n\n  // New integration relationships\n  teamsMessages           TeamsMessage[]\n  slackMessages           SlackMessage[]\n  zoomMeetings            ZoomMeeting[]\n  salesforceAccounts      SalesforceAccount[]\n  salesforceOpportunities SalesforceOpportunity[]\n\n  @@map(\"deals\")\n}\n\n// Contacts and people\nmodel Contact {\n  id                String    @id @default(uuid())\n  userId            String\n  dealId            String?\n  googleContactId   String? // For Google Contacts sync\n  name              String\n  email             String?\n  phone             String?\n  company           String?\n  title             String?\n  role              String?\n  linkedinUrl       String?\n  avatar            String?\n  notes             String?\n  tags              String[]\n  relationshipScore Float? // 0-100\n  lastContact       DateTime?\n  status            String    @default(\"active\") // hot, warm, cold, inactive\n  isKeyContact      Boolean   @default(false)\n  source            String? // google, manual, imported, etc.\n  metadata          Json?\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n\n  // Relationships\n  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)\n  deal           Deal?           @relation(fields: [dealId], references: [id], onDelete: SetNull)\n  activities     Activity[]\n  communications Communication[]\n\n  // New integration relationships\n  teamsMessages TeamsMessage[]\n  slackMessages SlackMessage[]\n\n  @@unique([userId, email])\n  @@map(\"contacts\")\n}\n\n// Activities (meetings, calls, emails, etc.)\nmodel Activity {\n  id          String   @id @default(uuid())\n  userId      String\n  dealId      String?\n  contactId   String?\n  type        String // 'email', 'meeting', 'call', 'document', 'note', 'task'\n  title       String\n  description String?\n  content     String? // Full content for notes, email body, etc.\n  date        DateTime\n  duration    Int? // Duration in minutes\n  location    String?\n  attendees   String[] // Array of attendee emails/names\n  status      String   @default(\"completed\") // scheduled, completed, cancelled\n  priority    String   @default(\"medium\")\n  outcome     String?\n  nextSteps   String?\n  metadata    Json? // Store provider-specific data (Gmail messageId, Calendar eventId, etc.)\n  externalId  String? // ID from external system (Gmail, Calendar, etc.)\n  syncedFrom  String? // Source: gmail, calendar, manual, etc.\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relationships\n  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  deal    Deal?    @relation(fields: [dealId], references: [id], onDelete: SetNull)\n  contact Contact? @relation(fields: [contactId], references: [id], onDelete: SetNull)\n\n  @@map(\"activities\")\n}\n\n// Documents and files\nmodel Document {\n  id             String   @id @default(uuid())\n  userId         String\n  dealId         String?\n  name           String\n  description    String?\n  type           String // 'pdf', 'doc', 'xls', 'ppt', 'image', etc.\n  category       String? // 'pitch-deck', 'financials', 'legal', 'dd', etc.\n  size           Int? // Size in bytes\n  url            String? // URL if stored in cloud\n  googleDriveId  String? // Google Drive file ID\n  path           String? // Local path if stored locally\n  version        String   @default(\"1.0\")\n  isConfidential Boolean  @default(false)\n  uploadedBy     String?\n  tags           String[]\n  metadata       Json? // Store file metadata\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  // Relationships\n  user User  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  deal Deal? @relation(fields: [dealId], references: [id], onDelete: SetNull)\n\n  @@map(\"documents\")\n}\n\n// Email threads and communications\nmodel Communication {\n  id          String    @id @default(uuid())\n  userId      String\n  dealId      String?\n  contactId   String?\n  type        String // 'email', 'sms', 'call', 'meeting'\n  subject     String?\n  content     String?\n  htmlContent String?\n  fromEmail   String?\n  toEmails    String[]\n  ccEmails    String[]\n  bccEmails   String[]\n  threadId    String? // Gmail thread ID\n  messageId   String? // Gmail message ID\n  status      String    @default(\"sent\") // draft, sent, received, failed\n  direction   String // inbound, outbound\n  isRead      Boolean   @default(false)\n  isImportant Boolean   @default(false)\n  labels      String[] // Gmail labels\n  attachments Json? // Store attachment info\n  metadata    Json?\n  sentAt      DateTime?\n  receivedAt  DateTime?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  // Relationships\n  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  deal    Deal?    @relation(fields: [dealId], references: [id], onDelete: SetNull)\n  contact Contact? @relation(fields: [contactId], references: [id], onDelete: SetNull)\n\n  @@map(\"communications\")\n}\n\n// Investors and LPs\nmodel Investor {\n  id              String    @id @default(uuid())\n  userId          String\n  name            String\n  type            String // 'institutional', 'family-office', 'fund-of-funds', 'individual'\n  status          String    @default(\"active\")\n  totalCommitment Float?\n  totalCalled     Float?\n  description     String?\n  website         String?\n  location        String?\n  founded         DateTime?\n  aum             Float? // Assets under management\n  tags            String[]\n  metadata        Json?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n\n  // Relationships\n  user             User                  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  entities         InvestorEntity[]\n  groupMemberships InvestorGroupMember[]\n\n  @@map(\"investors\")\n}\n\n// Funds\nmodel Fund {\n  id                String   @id @default(uuid())\n  userId            String\n  name              String\n  type              String // 'venture', 'growth', 'buyout', etc.\n  strategy          String?\n  targetSize        Float\n  minimumCommitment Float?\n  managementFee     Float?\n  carriedInterest   Float?\n  currency          String   @default(\"USD\")\n  vintage           Int?\n  investmentPeriod  Int? // Years\n  fundTerm          Int? // Years\n  geoFocus          String?\n  sectorFocus       String?\n  description       String?\n  status            String   @default(\"Pre-Launch\")\n  raisedAmount      Float    @default(0)\n  investorCount     Int      @default(0)\n  metadata          Json?\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"funds\")\n}\n\n// Investor entities (LLCs, corporations, etc.)\nmodel InvestorEntity {\n  id              String   @id @default(uuid())\n  investorId      String\n  name            String\n  type            String // 'direct-investment', 'private-banking', 'family-llc', etc.\n  investmentType  String // 'corporation', 'llc', 'partnership', 'trust'\n  commitment      Float?\n  called          Float?\n  status          String   @default(\"active\")\n  documents       Json? // Store document references\n  fundInvestments Json? // Store fund investment details\n  createdAt       DateTime @default(now())\n  updatedAt       DateTime @updatedAt\n\n  investor Investor @relation(fields: [investorId], references: [id], onDelete: Cascade)\n\n  @@map(\"investor_entities\")\n}\n\n// Reports and generated documents\nmodel Report {\n  id          String    @id @default(uuid())\n  userId      String\n  title       String\n  type        String // 'quarterly', 'annual', 'deal-summary', 'lp-update'\n  format      String    @default(\"pdf\") // pdf, excel, word\n  content     String? // Generated content\n  data        Json? // Data used to generate report\n  url         String? // URL if stored in cloud\n  status      String    @default(\"draft\") // draft, generating, completed, failed\n  recipients  String[] // Email addresses of recipients\n  sentAt      DateTime?\n  generatedAt DateTime?\n  metadata    Json?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  @@map(\"reports\")\n}\n\n// Sync jobs and background tasks\nmodel SyncJob {\n  id             String    @id @default(uuid())\n  userId         String\n  type           String // 'gmail', 'calendar', 'contacts', 'drive', 'teams', 'slack', 'zoom', 'salesforce'\n  status         String // 'pending', 'running', 'completed', 'failed'\n  startedAt      DateTime?\n  completedAt    DateTime?\n  errorMessage   String?\n  itemsProcessed Int?\n  metadata       Json?\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n\n  @@map(\"sync_jobs\")\n}\n\n// Microsoft Teams data\nmodel TeamsMessage {\n  id          String   @id @default(uuid())\n  userId      String\n  dealId      String?\n  contactId   String?\n  messageId   String   @unique // Teams message ID\n  chatId      String? // Teams chat ID\n  channelId   String? // Teams channel ID\n  teamId      String? // Teams team ID\n  fromEmail   String\n  fromName    String\n  content     String\n  contentType String   @default(\"text\") // text, html\n  importance  String   @default(\"normal\") // normal, high, urgent\n  messageType String // message, reply, reaction\n  attachments Json? // Store attachment info\n  mentions    String[] // Array of mentioned user emails\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  sentAt      DateTime\n\n  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  deal    Deal?    @relation(fields: [dealId], references: [id], onDelete: SetNull)\n  contact Contact? @relation(fields: [contactId], references: [id], onDelete: SetNull)\n\n  @@map(\"teams_messages\")\n}\n\nmodel TeamsChannel {\n  id          String   @id @default(uuid())\n  userId      String\n  channelId   String   @unique // Teams channel ID\n  teamId      String // Teams team ID\n  name        String\n  description String?\n  type        String // standard, private, shared\n  webUrl      String?\n  memberCount Int?\n  isArchived  Boolean  @default(false)\n  metadata    Json? // Store additional Teams data\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"teams_channels\")\n}\n\n// Slack data\nmodel SlackMessage {\n  id          String   @id @default(uuid())\n  userId      String\n  dealId      String?\n  contactId   String?\n  messageId   String   @unique // Slack message timestamp\n  channelId   String // Slack channel ID\n  channelName String?\n  fromUserId  String // Slack user ID\n  fromName    String\n  text        String\n  messageType String   @default(\"message\") // message, reply, thread\n  threadTs    String? // Thread timestamp for replies\n  attachments Json? // Store attachment info\n  reactions   Json? // Store reaction data\n  mentions    String[] // Array of mentioned users\n  sentAt      DateTime\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  deal    Deal?    @relation(fields: [dealId], references: [id], onDelete: SetNull)\n  contact Contact? @relation(fields: [contactId], references: [id], onDelete: SetNull)\n\n  @@map(\"slack_messages\")\n}\n\nmodel SlackChannel {\n  id          String   @id @default(uuid())\n  userId      String\n  channelId   String   @unique // Slack channel ID\n  name        String\n  purpose     String?\n  topic       String?\n  isPrivate   Boolean  @default(false)\n  isArchived  Boolean  @default(false)\n  memberCount Int?\n  metadata    Json? // Store additional Slack data\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"slack_channels\")\n}\n\n// Zoom data\nmodel ZoomMeeting {\n  id               String   @id @default(uuid())\n  userId           String\n  dealId           String?\n  meetingId        String   @unique // Zoom meeting ID\n  uuid             String? // Zoom meeting UUID\n  topic            String\n  agenda           String?\n  startTime        DateTime\n  duration         Int // Duration in minutes\n  timezone         String\n  status           String // waiting, started, finished\n  meetingType      String // instant, scheduled, recurring\n  joinUrl          String?\n  startUrl         String?\n  password         String?\n  hostEmail        String?\n  participantCount Int?\n  hasRecording     Boolean  @default(false)\n  recordingUrl     String?\n  metadata         Json? // Store additional Zoom data\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n\n  user         User              @relation(fields: [userId], references: [id], onDelete: Cascade)\n  deal         Deal?             @relation(fields: [dealId], references: [id], onDelete: SetNull)\n  participants ZoomParticipant[]\n\n  @@map(\"zoom_meetings\")\n}\n\nmodel ZoomParticipant {\n  id         String    @id @default(uuid())\n  meetingId  String\n  userId     String? // Our user ID if this participant is a user\n  zoomUserId String? // Zoom user ID\n  name       String\n  email      String?\n  joinTime   DateTime\n  leaveTime  DateTime?\n  duration   Int? // Duration in minutes\n  status     String // joined, left\n  metadata   Json? // Store additional participant data\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n\n  meeting ZoomMeeting @relation(fields: [meetingId], references: [id], onDelete: Cascade)\n  user    User?       @relation(fields: [userId], references: [id], onDelete: SetNull)\n\n  @@map(\"zoom_participants\")\n}\n\n// Salesforce data\nmodel SalesforceAccount {\n  id             String   @id @default(uuid())\n  userId         String\n  dealId         String?\n  accountId      String   @unique // Salesforce Account ID\n  name           String\n  type           String? // Customer, Partner, Prospect, etc.\n  industry       String?\n  website        String?\n  phone          String?\n  billingCity    String?\n  billingState   String?\n  billingCountry String?\n  description    String?\n  revenue        Float?\n  employees      Int?\n  ownerId        String? // Salesforce Owner ID\n  metadata       Json? // Store additional Salesforce data\n  lastSync       DateTime @default(now())\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  user          User                    @relation(fields: [userId], references: [id], onDelete: Cascade)\n  deal          Deal?                   @relation(fields: [dealId], references: [id], onDelete: SetNull)\n  contacts      SalesforceContact[]\n  opportunities SalesforceOpportunity[]\n\n  @@map(\"salesforce_accounts\")\n}\n\nmodel SalesforceContact {\n  id          String   @id @default(uuid())\n  userId      String\n  contactId   String   @unique // Salesforce Contact ID\n  accountId   String? // Our SalesforceAccount ID\n  name        String\n  email       String?\n  phone       String?\n  title       String?\n  department  String?\n  leadSource  String?\n  description String?\n  ownerId     String? // Salesforce Owner ID\n  metadata    Json? // Store additional Salesforce data\n  lastSync    DateTime @default(now())\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  user    User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n  account SalesforceAccount? @relation(fields: [accountId], references: [id], onDelete: SetNull)\n\n  @@map(\"salesforce_contacts\")\n}\n\nmodel SalesforceOpportunity {\n  id            String    @id @default(uuid())\n  userId        String\n  dealId        String?\n  opportunityId String    @unique // Salesforce Opportunity ID\n  accountId     String? // Our SalesforceAccount ID\n  name          String\n  amount        Float?\n  stage         String\n  probability   Float? // 0-100\n  closeDate     DateTime?\n  type          String?\n  leadSource    String?\n  description   String?\n  ownerId       String? // Salesforce Owner ID\n  metadata      Json? // Store additional Salesforce data\n  lastSync      DateTime  @default(now())\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  user    User               @relation(fields: [userId], references: [id], onDelete: Cascade)\n  deal    Deal?              @relation(fields: [dealId], references: [id], onDelete: SetNull)\n  account SalesforceAccount? @relation(fields: [accountId], references: [id], onDelete: SetNull)\n\n  @@map(\"salesforce_opportunities\")\n}\n\n// LP Groups for organizing Limited Partners\nmodel LPGroup {\n  id               String   @id @default(uuid())\n  userId           String\n  name             String\n  description      String?\n  type             String   @default(\"custom\") // \"system\" or \"custom\"\n  criteria         Json? // Store group criteria (investment types, regions, etc.)\n  autoAssign       Boolean  @default(false)\n  emailPreferences Json? // Store email preferences as JSON\n  createdAt        DateTime @default(now())\n  updatedAt        DateTime @updatedAt\n\n  user    User                  @relation(fields: [userId], references: [id], onDelete: Cascade)\n  members InvestorGroupMember[]\n\n  @@map(\"lp_groups\")\n}\n\n// Junction table for many-to-many relationship between Investors and LP Groups\nmodel InvestorGroupMember {\n  id           String   @id @default(uuid())\n  investorId   String\n  groupId      String\n  assignedAt   DateTime @default(now())\n  autoAssigned Boolean  @default(false)\n\n  investor Investor @relation(fields: [investorId], references: [id], onDelete: Cascade)\n  group    LPGroup  @relation(fields: [groupId], references: [id], onDelete: Cascade)\n\n  @@unique([investorId, groupId])\n  @@map(\"investor_group_members\")\n}\n",
  "inlineSchemaHash": "f173b5cefcb108b74c5f2ac4860df1ad84945446c004ad144980db1b62639dda",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firm\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"Profile\",\"relationName\":\"ProfileToUser\"},{\"name\":\"integrations\",\"kind\":\"object\",\"type\":\"Integration\",\"relationName\":\"IntegrationToUser\"},{\"name\":\"deals\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"DealToUser\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"ActivityToUser\"},{\"name\":\"ownedContacts\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"ContactToUser\"},{\"name\":\"communications\",\"kind\":\"object\",\"type\":\"Communication\",\"relationName\":\"CommunicationToUser\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DocumentToUser\"},{\"name\":\"preferences\",\"kind\":\"object\",\"type\":\"UserPreference\",\"relationName\":\"UserToUserPreference\"},{\"name\":\"teamsMessages\",\"kind\":\"object\",\"type\":\"TeamsMessage\",\"relationName\":\"TeamsMessageToUser\"},{\"name\":\"teamsChannels\",\"kind\":\"object\",\"type\":\"TeamsChannel\",\"relationName\":\"TeamsChannelToUser\"},{\"name\":\"slackMessages\",\"kind\":\"object\",\"type\":\"SlackMessage\",\"relationName\":\"SlackMessageToUser\"},{\"name\":\"slackChannels\",\"kind\":\"object\",\"type\":\"SlackChannel\",\"relationName\":\"SlackChannelToUser\"},{\"name\":\"zoomMeetings\",\"kind\":\"object\",\"type\":\"ZoomMeeting\",\"relationName\":\"UserToZoomMeeting\"},{\"name\":\"zoomParticipants\",\"kind\":\"object\",\"type\":\"ZoomParticipant\",\"relationName\":\"UserToZoomParticipant\"},{\"name\":\"salesforceAccounts\",\"kind\":\"object\",\"type\":\"SalesforceAccount\",\"relationName\":\"SalesforceAccountToUser\"},{\"name\":\"salesforceContacts\",\"kind\":\"object\",\"type\":\"SalesforceContact\",\"relationName\":\"SalesforceContactToUser\"},{\"name\":\"salesforceOpportunities\",\"kind\":\"object\",\"type\":\"SalesforceOpportunity\",\"relationName\":\"SalesforceOpportunityToUser\"},{\"name\":\"funds\",\"kind\":\"object\",\"type\":\"Fund\",\"relationName\":\"FundToUser\"},{\"name\":\"investors\",\"kind\":\"object\",\"type\":\"Investor\",\"relationName\":\"InvestorToUser\"},{\"name\":\"lpGroups\",\"kind\":\"object\",\"type\":\"LPGroup\",\"relationName\":\"LPGroupToUser\"}],\"dbName\":\"users\"},\"Profile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"theme\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifications\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProfileToUser\"}],\"dbName\":\"profiles\"},\"UserPreference\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailNotify\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pushNotify\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"smsNotify\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"calendarNotify\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"dealNotify\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"autoSave\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"darkMode\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserPreference\"}],\"dbName\":\"user_preferences\"},\"Integration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"accessToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lastSync\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"syncStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IntegrationToUser\"}],\"dbName\":\"integrations\"},\"Deal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sector\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"probability\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"leadPartner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"team\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetClose\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualClose\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextStep\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastActivity\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"geography\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealSize\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metrics\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DealToUser\"},{\"name\":\"contacts\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"ContactToDeal\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DealToDocument\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"ActivityToDeal\"},{\"name\":\"communications\",\"kind\":\"object\",\"type\":\"Communication\",\"relationName\":\"CommunicationToDeal\"},{\"name\":\"teamsMessages\",\"kind\":\"object\",\"type\":\"TeamsMessage\",\"relationName\":\"DealToTeamsMessage\"},{\"name\":\"slackMessages\",\"kind\":\"object\",\"type\":\"SlackMessage\",\"relationName\":\"DealToSlackMessage\"},{\"name\":\"zoomMeetings\",\"kind\":\"object\",\"type\":\"ZoomMeeting\",\"relationName\":\"DealToZoomMeeting\"},{\"name\":\"salesforceAccounts\",\"kind\":\"object\",\"type\":\"SalesforceAccount\",\"relationName\":\"DealToSalesforceAccount\"},{\"name\":\"salesforceOpportunities\",\"kind\":\"object\",\"type\":\"SalesforceOpportunity\",\"relationName\":\"DealToSalesforceOpportunity\"}],\"dbName\":\"deals\"},\"Contact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"googleContactId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedinUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"relationshipScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastContact\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isKeyContact\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ContactToUser\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"ContactToDeal\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"Activity\",\"relationName\":\"ActivityToContact\"},{\"name\":\"communications\",\"kind\":\"object\",\"type\":\"Communication\",\"relationName\":\"CommunicationToContact\"},{\"name\":\"teamsMessages\",\"kind\":\"object\",\"type\":\"TeamsMessage\",\"relationName\":\"ContactToTeamsMessage\"},{\"name\":\"slackMessages\",\"kind\":\"object\",\"type\":\"SlackMessage\",\"relationName\":\"ContactToSlackMessage\"}],\"dbName\":\"contacts\"},\"Activity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attendees\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"outcome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nextSteps\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"externalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"syncedFrom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ActivityToUser\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"ActivityToDeal\"},{\"name\":\"contact\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"ActivityToContact\"}],\"dbName\":\"activities\"},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"googleDriveId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"path\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isConfidential\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DocumentToUser\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"DealToDocument\"}],\"dbName\":\"documents\"},\"Communication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"htmlContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toEmails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ccEmails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bccEmails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"threadId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direction\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isImportant\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"labels\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommunicationToUser\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"CommunicationToDeal\"},{\"name\":\"contact\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"CommunicationToContact\"}],\"dbName\":\"communications\"},\"Investor\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalCommitment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"totalCalled\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"founded\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"aum\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvestorToUser\"},{\"name\":\"entities\",\"kind\":\"object\",\"type\":\"InvestorEntity\",\"relationName\":\"InvestorToInvestorEntity\"},{\"name\":\"groupMemberships\",\"kind\":\"object\",\"type\":\"InvestorGroupMember\",\"relationName\":\"InvestorToInvestorGroupMember\"}],\"dbName\":\"investors\"},\"Fund\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strategy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetSize\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"minimumCommitment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"managementFee\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"carriedInterest\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vintage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"investmentPeriod\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fundTerm\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"geoFocus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sectorFocus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"raisedAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"investorCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FundToUser\"}],\"dbName\":\"funds\"},\"InvestorEntity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investmentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commitment\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"called\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documents\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"fundInvestments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"investor\",\"kind\":\"object\",\"type\":\"Investor\",\"relationName\":\"InvestorToInvestorEntity\"}],\"dbName\":\"investor_entities\"},\"Report\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"format\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipients\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"generatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"reports\"},\"SyncJob\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"itemsProcessed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"sync_jobs\"},\"TeamsMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"chatId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contentType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"importance\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"mentions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamsMessageToUser\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"DealToTeamsMessage\"},{\"name\":\"contact\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"ContactToTeamsMessage\"}],\"dbName\":\"teams_messages\"},\"TeamsChannel\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"webUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"memberCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamsChannelToUser\"}],\"dbName\":\"teams_channels\"},\"SlackMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channelName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fromName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"threadTs\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"reactions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"mentions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SlackMessageToUser\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"DealToSlackMessage\"},{\"name\":\"contact\",\"kind\":\"object\",\"type\":\"Contact\",\"relationName\":\"ContactToSlackMessage\"}],\"dbName\":\"slack_messages\"},\"SlackChannel\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channelId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"purpose\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"topic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPrivate\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"memberCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SlackChannelToUser\"}],\"dbName\":\"slack_channels\"},\"ZoomMeeting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meetingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uuid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"topic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agenda\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meetingType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hostEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"participantCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"hasRecording\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"recordingUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToZoomMeeting\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"DealToZoomMeeting\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"ZoomParticipant\",\"relationName\":\"ZoomMeetingToZoomParticipant\"}],\"dbName\":\"zoom_meetings\"},\"ZoomParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meetingId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zoomUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"leaveTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"meeting\",\"kind\":\"object\",\"type\":\"ZoomMeeting\",\"relationName\":\"ZoomMeetingToZoomParticipant\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToZoomParticipant\"}],\"dbName\":\"zoom_participants\"},\"SalesforceAccount\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"industry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billingCity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billingState\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"billingCountry\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"revenue\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"employees\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lastSync\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SalesforceAccountToUser\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"DealToSalesforceAccount\"},{\"name\":\"contacts\",\"kind\":\"object\",\"type\":\"SalesforceContact\",\"relationName\":\"SalesforceAccountToSalesforceContact\"},{\"name\":\"opportunities\",\"kind\":\"object\",\"type\":\"SalesforceOpportunity\",\"relationName\":\"SalesforceAccountToSalesforceOpportunity\"}],\"dbName\":\"salesforce_accounts\"},\"SalesforceContact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leadSource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lastSync\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SalesforceContactToUser\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"SalesforceAccount\",\"relationName\":\"SalesforceAccountToSalesforceContact\"}],\"dbName\":\"salesforce_contacts\"},\"SalesforceOpportunity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dealId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"opportunityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"stage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"probability\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"closeDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leadSource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lastSync\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SalesforceOpportunityToUser\"},{\"name\":\"deal\",\"kind\":\"object\",\"type\":\"Deal\",\"relationName\":\"DealToSalesforceOpportunity\"},{\"name\":\"account\",\"kind\":\"object\",\"type\":\"SalesforceAccount\",\"relationName\":\"SalesforceAccountToSalesforceOpportunity\"}],\"dbName\":\"salesforce_opportunities\"},\"LPGroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"criteria\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"autoAssign\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailPreferences\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"LPGroupToUser\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"InvestorGroupMember\",\"relationName\":\"InvestorGroupMemberToLPGroup\"}],\"dbName\":\"lp_groups\"},\"InvestorGroupMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"investorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"groupId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"autoAssigned\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"investor\",\"kind\":\"object\",\"type\":\"Investor\",\"relationName\":\"InvestorToInvestorGroupMember\"},{\"name\":\"group\",\"kind\":\"object\",\"type\":\"LPGroup\",\"relationName\":\"InvestorGroupMemberToLPGroup\"}],\"dbName\":\"investor_group_members\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

